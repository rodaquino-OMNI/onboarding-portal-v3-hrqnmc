# Default values for auth-service
# This is a YAML-formatted file.

# Prefix for kubernetes resources
nameOverride: ""
fullnameOverride: ""

# Target namespace for deployment
namespace: "austa-system"

# Container image configuration
image:
  repository: austa/auth-service
  pullPolicy: IfNotPresent
  tag: "1.0.0"  # helm v3.0+

# Image pull secrets for private registry
imagePullSecrets:
  - name: austa-registry-secret

# Service account configuration
serviceAccount:
  create: true
  annotations:
    azure.workload.identity/client-id: auth-service-client-id
    azure.workload.identity/tenant-id: austa-tenant-id
  name: auth-service-sa

# Pod annotations for monitoring and security
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "3001"
  prometheus.io/path: "/metrics"
  jaeger.io/agent-hostname: jaeger-agent.monitoring
  vault.hashicorp.com/agent-inject: "true"
  vault.hashicorp.com/role: auth-service

# Pod security context
podSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

# Container security context
securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  allowPrivilegeEscalation: false

# Service configuration
service:
  type: ClusterIP
  port: 3001
  targetPort: 3001
  protocol: TCP
  name: http

# Resource requests and limits
resources:
  requests:
    cpu: "1"
    memory: "2Gi"
  limits:
    cpu: "2"
    memory: "4Gi"

# Horizontal Pod Autoscaling
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80
  scaleDownStabilizationWindowSeconds: 300

# Node selection and affinity
nodeSelector:
  kubernetes.io/os: linux
  purpose: auth-services

# Pod anti-affinity for high availability
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app
              operator: In
              values:
                - auth-service
        topologyKey: kubernetes.io/hostname

# Environment variables
env:
  NODE_ENV: production
  PORT: "3001"
  JWT_ALGORITHM: RS256
  JWT_ISSUER: AUSTA Health Portal
  JWT_AUDIENCE: AUSTA Health Portal Users
  ENCRYPTION_ALGORITHM: AES-256-GCM
  HASH_ALGORITHM: SHA-256
  SALT_ROUNDS: "12"
  MFA_ENABLED: "true"
  MFA_TYPE: TOTP
  SESSION_DURATION: "28800"
  RATE_LIMIT_WINDOW: "900"
  RATE_LIMIT_MAX_REQUESTS: "1000"

# Health check probes
probes:
  readiness:
    httpGet:
      path: /health/readiness
      port: 3001
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  liveness:
    httpGet:
      path: /health/liveness
      port: 3001
    initialDelaySeconds: 15
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  startup:
    httpGet:
      path: /health/startup
      port: 3001
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 30

# Monitoring configuration
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: "30s"
    scrapeTimeout: "10s"
    namespace: monitoring
    labels:
      release: prometheus
    endpoints:
      - port: http
        path: /metrics
        interval: "30s"
  grafanaDashboards:
    enabled: true
    labels:
      grafana_dashboard: "1"

# Deployment strategy
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0