apiVersion: v1
kind: Service
metadata:
  name: {{ include "api-gateway.fullname" . }}
  labels:
    {{- include "api-gateway.labels" . | nindent 4 }}
  annotations:
    # Monitoring annotations
    prometheus.io/scrape: "{{ .Values.podAnnotations.prometheus.io/scrape }}"
    prometheus.io/port: "{{ .Values.podAnnotations.prometheus.io/port }}"
    prometheus.io/path: "{{ .Values.podAnnotations.prometheus.io/path }}"
    
    # Azure internal load balancer annotations
    service.beta.kubernetes.io/azure-load-balancer-internal: "{{ .Values.service.annotations.service\.beta\.kubernetes\.io/azure-load-balancer-internal }}"
    
    # Health check annotations
    healthcheck/enabled: "true"
    healthcheck/path: "/health"
    healthcheck/port: "8100"
    
    # Service mesh annotations
    service.beta.kubernetes.io/service-mesh-enabled: "true"
    service.beta.kubernetes.io/traffic-policy: "local"

spec:
  type: {{ .Values.service.type }}
  ports:
    # Main HTTP port
    - port: 80
      targetPort: 8000
      protocol: TCP
      name: proxy
    
    # HTTPS port
    - port: {{ .Values.service.port }}
      targetPort: {{ .Values.service.targetPort }}
      protocol: TCP
      name: proxy-ssl
    
    # Admin API port
    - port: 8001
      targetPort: 8001
      protocol: TCP
      name: admin-api
    
    # Admin SSL port
    - port: 8444
      targetPort: 8444
      protocol: TCP
      name: admin-ssl
    
    # Metrics port
    - port: 8100
      targetPort: 8100
      protocol: TCP
      name: metrics
  
  selector:
    {{- include "api-gateway.selectorLabels" . | nindent 4 }}
  
  # Session affinity configuration for consistent routing
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800  # 3 hour timeout
  
  # Ensure traffic policy is set for optimal routing
  internalTrafficPolicy: Local
  
  # Configure health check parameters
  publishNotReadyAddresses: false