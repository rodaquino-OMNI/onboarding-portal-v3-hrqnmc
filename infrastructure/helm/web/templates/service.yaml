apiVersion: v1
kind: Service
metadata:
  name: {{ include "web.fullname" . }}
  labels:
    {{- include "web.labels" . | nindent 4 }}
  annotations:
    # Prometheus monitoring annotations
    prometheus.io/scrape: "{{ .Values.monitoring.enabled | default "true" }}"
    prometheus.io/port: "{{ .Values.monitoring.port | default "80" }}"
    prometheus.io/path: "{{ .Values.monitoring.path | default "/metrics" }}"
    
    # Istio service mesh annotations
    service.istio.io/canonical-name: "{{ include "web.fullname" . }}"
    service.istio.io/canonical-revision: "{{ .Values.image.tag | default .Chart.AppVersion }}"
    security.istio.io/tlsMode: "{{ .Values.service.istio.tlsMode | default "istio" }}"
    
    # Topology spread annotations
    topology.kubernetes.io/region: "{{ .Values.service.region | default "brazil-south" }}"
    
    # Azure internal load balancer annotation
    service.beta.kubernetes.io/azure-load-balancer-internal: "{{ .Values.service.internal | default "true" }}"
    
    # Service account binding
    azure.workload.identity/use-azure-workload-identity: "{{ .Values.serviceAccount.create }}"

spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.service.port }}
      targetPort: http
      protocol: TCP
      name: http
    - port: {{ .Values.monitoring.port | default 9090 }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    {{- include "web.selectorLabels" . | nindent 4 }}
  sessionAffinity: {{ .Values.service.sessionAffinity | default "None" }}
  # Topology aware routing configuration
  topologyKeys:
    - "kubernetes.io/hostname"
    - "topology.kubernetes.io/zone" 
    - "topology.kubernetes.io/region"
    - "*"
  # Health check configuration
  publishNotReadyAddresses: false
  # External traffic policy for better session affinity
  externalTrafficPolicy: {{ .Values.service.externalTrafficPolicy | default "Local" }}