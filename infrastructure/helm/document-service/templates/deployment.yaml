apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "document-service.fullname" . }}
  labels:
    {{- include "document-service.labels" . | nindent 4 }}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "document-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "document-service.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        jaeger-agent.sidecar.istio.io/inject: "true"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "document-service"
    spec:
      serviceAccountName: {{ include "document-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          env:
            - name: PORT
              value: {{ .Values.config.port | quote }}
            - name: ENVIRONMENT
              value: {{ .Values.config.environment }}
            - name: MAX_FILE_SIZE
              value: {{ .Values.config.maxFileSize | quote }}
            - name: ALLOWED_FILE_TYPES
              value: {{ join "," .Values.config.allowedFileTypes | quote }}
            - name: REQUEST_TIMEOUT
              value: {{ .Values.config.requestTimeout }}
            - name: UPLOAD_TIMEOUT
              value: {{ .Values.config.uploadTimeout }}
            - name: DOWNLOAD_TIMEOUT
              value: {{ .Values.config.downloadTimeout }}
            - name: OCR_TIMEOUT
              value: {{ .Values.config.ocrTimeout }}
            - name: CLASSIFICATION_TIMEOUT
              value: {{ .Values.config.classificationTimeout }}
            - name: MAX_RETRIES
              value: {{ .Values.config.maxRetries | quote }}
            - name: ENCRYPTION_ALGORITHM
              value: {{ .Values.config.encryption.algorithm }}
            - name: MINIO_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: {{ include "document-service.fullname" . }}-minio
                  key: endpoint
            - name: MINIO_BUCKET_NAME
              value: {{ .Values.minio.bucketName }}
            - name: MINIO_USE_SSL
              value: {{ .Values.minio.useSSL | quote }}
            - name: AZURE_VISION_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: {{ include "document-service.fullname" . }}-azure
                  key: vision-endpoint
            - name: AZURE_VISION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "document-service.fullname" . }}-azure
                  key: vision-key
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: documents-cache
              mountPath: /cache
            - name: config
              mountPath: /config
              readOnly: true
      volumes:
        - name: tmp
          emptyDir: {}
        - name: documents-cache
          emptyDir:
            medium: Memory
            sizeLimit: 512Mi
        - name: config
          configMap:
            name: {{ include "document-service.fullname" . }}-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}