# Default values for enrollment-service Helm chart
# This is a YAML-formatted file.

# Number of pod replicas for high availability (99.9% uptime requirement)
replicaCount: 3

# Container image configuration
image:
  repository: austa.azurecr.io/enrollment-service
  tag: 1.0.0
  pullPolicy: IfNotPresent

# Image pull secrets for Azure Container Registry
imagePullSecrets:
  - name: acr-secret

# Chart name override configurations
nameOverride: ""
fullnameOverride: ""

# ServiceAccount configuration
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod annotations for Prometheus metrics scraping
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/port: "8081"

# Pod security context
podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000

# Container security context
securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

# Service configuration
service:
  type: ClusterIP
  port: 8080
  managementPort: 8081

# Resource requests and limits for the enrollment service
resources:
  requests:
    cpu: 500m
    memory: 1Gi
  limits:
    cpu: 1000m
    memory: 2Gi

# Horizontal Pod Autoscaling configuration
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Node selector configuration
nodeSelector: {}

# Pod tolerations
tolerations: []

# Pod affinity rules for high availability
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - enrollment-service
          topologyKey: kubernetes.io/hostname

# Environment variables for the enrollment service
env:
  - name: SPRING_PROFILES_ACTIVE
    value: "prod"
  - name: DB_HOST
    value: "{{ .Release.Name }}-postgresql"
  - name: DB_PORT
    value: "5432"
  - name: DB_NAME
    value: "enrollment"
  - name: DB_USER
    valueFrom:
      secretKeyRef:
        name: "{{ .Release.Name }}-postgresql"
        key: username
  - name: DB_PASSWORD
    valueFrom:
      secretKeyRef:
        name: "{{ .Release.Name }}-postgresql"
        key: password

# Health check probes
livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: 8081
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: 8081
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# PostgreSQL dependency configuration
postgresql:
  enabled: true
  auth:
    username: enrollment
    database: enrollment
  primary:
    persistence:
      size: 10Gi
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 1000m
        memory: 2Gi

# Redis dependency configuration
redis:
  enabled: true
  architecture: replication
  auth:
    enabled: true
  master:
    persistence:
      size: 8Gi
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
      limits:
        cpu: 500m
        memory: 1Gi