# Pod Security Policies for Pre-paid Health Plan Onboarding Portal
# Kubernetes Version: 1.27+
# Implements LGPD and healthcare data protection requirements through strict pod security controls

---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: restricted-psp
  annotations:
    # Seccomp profile restrictions
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName: 'runtime/default'
    # AppArmor profile restrictions
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName: 'runtime/default'
    # Audit logging configuration
    audit.kubernetes.io/logLevel: "RequestResponse"
    audit.kubernetes.io/maxAge: "30d"
    audit.kubernetes.io/maxBackup: "10"
    audit.kubernetes.io/maxSize: "100Mi"
spec:
  # Disable privileged containers
  privileged: false
  # Prevent privilege escalation
  allowPrivilegeEscalation: false
  # Force read-only root filesystem
  readOnlyRootFilesystem: true
  # Drop all capabilities
  requiredDropCapabilities:
    - ALL
  
  # Allowed volume types
  volumes:
    - configMap
    - emptyDir
    - projected
    - secret
    - persistentVolumeClaim
  
  # Disable host namespaces
  hostNetwork: false
  hostIPC: false
  hostPID: false
  
  # User context controls
  runAsUser:
    rule: MustRunAsNonRoot
    ranges:
      - min: 1000
        max: 65535
  
  # Group context controls
  supplementalGroups:
    rule: MustRunAs
    ranges:
      - min: 1000
        max: 65535
  
  # Filesystem group controls
  fsGroup:
    rule: MustRunAs
    ranges:
      - min: 1000
        max: 65535
  
  # SELinux context
  seLinux:
    rule: RunAsAny

---
# Service Account bindings for microservices
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: psp:restricted
rules:
  - apiGroups: ['policy']
    resources: ['podsecuritypolicies']
    verbs: ['use']
    resourceNames: ['restricted-psp']

---
# API Gateway Service Account binding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: api-gateway-psp
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: psp:restricted
subjects:
  - kind: ServiceAccount
    name: api-gateway-sa
    namespace: default

---
# Auth Service Account binding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: auth-service-psp
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: psp:restricted
subjects:
  - kind: ServiceAccount
    name: auth-service-sa
    namespace: default

---
# Document Service Account binding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: document-service-psp
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: psp:restricted
subjects:
  - kind: ServiceAccount
    name: document-service-sa
    namespace: default

---
# Enrollment Service Account binding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: enrollment-service-psp
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: psp:restricted
subjects:
  - kind: ServiceAccount
    name: enrollment-service-sa
    namespace: default

---
# Health Service Account binding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: health-service-psp
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: psp:restricted
subjects:
  - kind: ServiceAccount
    name: health-service-sa
    namespace: default

---
# Policy Service Account binding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: policy-service-psp
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: psp:restricted
subjects:
  - kind: ServiceAccount
    name: policy-service-sa
    namespace: default