---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: health-service
  namespace: default
  labels:
    app: health-service
    version: v1
    component: backend
    part-of: onboarding-portal
  annotations:
    sidecar.istio.io/inject: "true"
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: health-service
  template:
    metadata:
      labels:
        app: health-service
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: health-service
          image: austa.azurecr.io/health-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              protocol: TCP
              name: http
            - containerPort: 8000
              protocol: TCP
              name: metrics
          env:
            - name: ENVIRONMENT
              value: "production"
            - name: LOG_LEVEL
              value: "INFO"
            - name: PORT
              value: "8000"
          envFrom:
            - secretRef:
                name: health-service-secrets
            - configMapRef:
                name: health-service-config
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "2"
              memory: "4Gi"
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop: ["ALL"]
            readOnlyRootFilesystem: true
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: health-service-config
              mountPath: /app/config
              readOnly: true
      volumes:
        - name: tmp
          emptyDir: {}
        - name: health-service-config
          configMap:
            name: health-service-config
      serviceAccountName: health-service-sa
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: health-service
  namespace: default
  labels:
    app: health-service
    component: backend
    part-of: onboarding-portal
spec:
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: metrics
  selector:
    app: health-service
  type: ClusterIP