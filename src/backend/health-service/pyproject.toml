[tool.poetry]
name = "health-service"
version = "1.0.0"
description = "Health assessment and questionnaire service for AUSTA's Pre-paid Health Plan Onboarding Portal"
authors = ["AUSTA Healthcare"]
readme = "README.md"
packages = [{include = "src"}]
python = "^3.11"

[tool.poetry]
dependencies = {
    "fastapi" = "^0.100.0",
    "uvicorn" = "^0.23.0",
    "pydantic" = "^2.0.0",
    "sqlalchemy" = "^2.0.0",
    "asyncpg" = "^0.28.0",
    "python-jose" = {extras = ["cryptography"], version = "^3.3.0"},
    "langchain" = "^0.0.300",
    "openai" = "^1.0.0",
    "prometheus-fastapi-instrumentator" = "^6.1.0",
    "starlette" = "^0.31.0",
    "python-multipart" = "^0.0.6",
    "httpx" = "^0.24.1",
    "redis" = "^4.6.0",
    "tenacity" = "^8.2.2",
    "structlog" = "^23.1.0",
    "python-dotenv" = "^1.0.0"
}

[tool.poetry.dev-dependencies]
pytest = "^7.0.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.5.0"
pre-commit = "^3.3.3"
bandit = "^1.7.5"
safety = "^2.3.5"
pytest-mock = "^3.11.1"
pytest-env = "^0.8.2"
faker = "^19.3.0"

[tool.poetry.scripts]
start = "uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload"
start:prod = "uvicorn src.main:app --host 0.0.0.0 --port 8000 --workers 4"
test = "pytest tests/ --cov=src --cov-report=xml --cov-report=term-missing"
lint = "flake8 src/ tests/ && mypy src/ tests/"
format = "black src/ tests/ && isort src/ tests/"
security = "bandit -r src/ && safety check"
clean = "rm -rf dist/ build/ *.egg-info .coverage .pytest_cache .mypy_cache"
docs = "pdoc --html --output-dir docs/ src/"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_optional = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "pass",
    "\\.\\.\\."
]